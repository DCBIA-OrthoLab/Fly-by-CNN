cmake_minimum_required (VERSION 2.8.11)
project (FlyBy)


# find_package(ITK)
# include(${ITK_USE_FILE})

find_package(VTK)
include(${VTK_USE_FILE})

find_package(ITK)
include(${ITK_USE_FILE})

find_package(SlicerExecutionModel)
include(${SlicerExecutionModel_USE_FILE})

SET(EXE_NAME fly_by_features)
SET(${EXE_NAME}_LIBRARIES  ${VTK_LIBRARIES} ${ITK_LIBRARIES})
SET(${EXE_NAME}_ADDITIONAL_SRCS fly_by_features.cxx vtkLinearSubdivisionFilter2.cxx vtkOFFReader.cxx)

SEMMacroBuildCLI(
NAME ${EXE_NAME}
EXECUTABLE_ONLY
ADDITIONAL_SRCS ${${EXE_NAME}_ADDITIONAL_SRCS}
TARGET_LIBRARIES ${${EXE_NAME}_LIBRARIES}
RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}
LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}
ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}
INSTALL_RUNTIME_DESTINATION ${INSTALL_RUNTIME_DESTINATION}
INSTALL_LIBRARY_DESTINATION ${INSTALL_LIBRARY_DESTINATION}
INSTALL_ARCHIVE_DESTINATION ${INSTALL_ARCHIVE_DESTINATION}
)

SET(EXE_NAME surfacefeaturesextractor)
SET(${EXE_NAME}_LIBRARIES  ${VTK_LIBRARIES} ${ITK_LIBRARIES})
SET(${EXE_NAME}_ADDITIONAL_SRCS surfacefeaturesextractor.cxx)

SEMMacroBuildCLI(
NAME ${EXE_NAME}
EXECUTABLE_ONLY
ADDITIONAL_SRCS ${${EXE_NAME}_ADDITIONAL_SRCS}
TARGET_LIBRARIES ${${EXE_NAME}_LIBRARIES}
RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}
LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}
ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}
INSTALL_RUNTIME_DESTINATION ${INSTALL_RUNTIME_DESTINATION}
INSTALL_LIBRARY_DESTINATION ${INSTALL_LIBRARY_DESTINATION}
INSTALL_ARCHIVE_DESTINATION ${INSTALL_ARCHIVE_DESTINATION}
)

SET(EXE_NAME vector2vector)
SET(${EXE_NAME}_LIBRARIES  ${VTK_LIBRARIES} ${ITK_LIBRARIES})
SET(${EXE_NAME}_ADDITIONAL_SRCS vector2vector.cxx)

SEMMacroBuildCLI(
NAME ${EXE_NAME}
EXECUTABLE_ONLY
ADDITIONAL_SRCS ${${EXE_NAME}_ADDITIONAL_SRCS}
TARGET_LIBRARIES ${${EXE_NAME}_LIBRARIES}
RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}
LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}
ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}
INSTALL_RUNTIME_DESTINATION ${INSTALL_RUNTIME_DESTINATION}
INSTALL_LIBRARY_DESTINATION ${INSTALL_LIBRARY_DESTINATION}
INSTALL_ARCHIVE_DESTINATION ${INSTALL_ARCHIVE_DESTINATION}
)